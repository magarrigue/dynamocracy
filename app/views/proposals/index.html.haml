%ul.proposals_nav 
  %li= link_to 'All', proposals_path
  %li= link_to "Ongoing", proposals_path(:search=>{:opening_at_before => Time.now, :closing_at_after => Time.now, :status_equals => 'open' })
  %li= link_to "Decisions", proposals_path(:search=>{:closing_at_before => Time.now, :status_equals => 'open' })
  %li= link_to "Pending", proposals_path(:search=>{:opening_at_after => Time.now, :status_equals => 'open' })
  %li= link_to "Cancelled", proposals_path(:search=>{:status_equals => 'cancelled' })
  %li= link_to "Withdrawn", proposals_path(:search=>{:status_equals => 'withdrawn' })
  %li= link_to "My proposals", proposals_path(:search=>{:user_id => current_user.id })
-if @proposals.empty?
  .empty
    No proposal
-else
  %table.proposals
    %thead
      - [:user,:text,:opening_at,:closing_at,:status].each do |attribute|
        %th= order  @search, :by => attribute      
      %th= order  @search, :by => :signatures_count, :as => 'Signatures'
      - if actionables?
        %th(colspan=2)='Action' 
      - if results? 
        %th= order @search, :by => :yes_count, :as => 'Yes/Support/No/Pass ' 
    %tbody
    - @proposals.each do |proposal|
      - proposal.signatures_count
      %tr(class="#{proposal.full_status}")
        %td(class='nickname')
          = proposal.user.nickname
          %br= proposal.full_status == 'open' ? 'proposes:' : 'proposed:'
        %td{:id=>"link_#{proposal.id}"}
          = link_to begining(proposal),"#proposal_#{proposal.id}"
          - comments = proposal.votes.collect{|v| v.comment}.find_all{|c| !c.empty?}
          -if mine?(proposal) && !comments.empty?
            %br="#{comments.size} suggestion(s)..."
        %td(class='date')= date_distance proposal.opening_at
        %td(class='date')= date_distance proposal.closing_at
        %td(class='status')= proposal.full_status
        %td(class='count')= proposal.signatures_count
        - if actionables?
          %td 
            - if votable? proposal
              = link_to 'Vote!', new_proposal_vote_path(proposal), :class => 'vote' 
          %td    
            - if withdrawable?(proposal)
              = link_to 'Withdraw!', withdraw_proposal_path(proposal) ,:confirm => "Do you confirm you abandon your proposal? : #{proposal.text[0..20]}... ?"  , :class => 'withdraw' 
            
        - if results? 
          %td(class = 'count') 
            - if proposal.full_status == 'closed'
              - %w(yes support no pass).each do |type|
                - count = proposal.send "#{type}_count"
                - size = ( type!='pass' ? 2+ 4 * count/( proposal.signatures_count + 1) : 1)  
                %span{:class => "#{type}", :style => "font-size: #{size}em"}
                  = count
              
            - elsif proposal.full_status == 'cancelled'
              %span(class='vetoed')="Vetoed by #{proposal.cancelled_by.nickname}"          
           
              
          
          
          
  =will_paginate

- @proposals.each do |proposal|
  %div#proposal.proposal.details{:id=>proposal.id,:style=>"display:none"}
    = render :partial => "proposal_detail", :locals=>{:proposal=>proposal}
      
  :javascript    
    $($('#link_#{proposal.id}').click(function(){
      $(".proposal").hide()
      $('#proposal_#{proposal.id}').show()
    }))
